plugins {
    id 'com.android.library'
}
apply plugin: 'kotlin-android' // apply plugin
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion compile_sdk_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        versionCode 1
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        configurations.all {
            resolutionStrategy { force 'androidx.core:core-ktx:1.8.0' }
        }

        externalNativeBuild {
            cmake {
//                abiFilters "armeabi-v7a", "arm64-v8a"
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures { dataBinding = true }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    android.libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "lib_bt_sdk_${defaultConfig.versionName}_${buildTime()}.aar"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }

    namespace 'com.sjbt.base'
}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
    google()
    jcenter()
    maven {
        url 'https://jitpack.io'
    }
}

//当前时间
def static buildTime() {
    def date = new Date()
    return date.format("yyyMMddHHmm")
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':lib-chuanyin:lib-interface')

    //要考虑上层依赖时候会产生冲突，采用方案进行规避，可以在打包的时候不打包进去，要求上层使用方增加依赖
    implementation "com.google.code.gson:gson:$gson_version"
    implementation 'com.guolindev.permissionx:permissionx:1.6.4'

    implementation "io.reactivex.rxjava3:rxjava:$rx_java_version"
    implementation "io.reactivex.rxjava3:rxandroid:$rx_android_version"

    api 'com.blankj:utilcodex:1.31.0'
}